═══════════════════════════════════════════════════════════════
   🚀 Crawl4AI 开发环境 - 快速启动卡
═══════════════════════════════════════════════════════════════

【第一次使用】

1️⃣ 启动 Docker Desktop（手动打开应用）
   → 等待顶部菜单栏图标变绿

2️⃣ 首次构建（只需一次，5-10 分钟）
   cd /Users/admin/tao/crawl4ai
   docker-compose -f docker-compose.dev.yml build
   
   ☕️ 提示：可以去喝杯咖啡，构建完成后永久可用

3️⃣ 启动服务（30 秒）
   docker-compose -f docker-compose.dev.yml up
   
   ✅ 看到 "Application startup complete" 即成功

4️⃣ 验证服务（新终端）
   curl http://localhost:11235/health
   curl http://localhost:11235/mcp/schema

═══════════════════════════════════════════════════════════════

【后续使用】（每次只需 5 秒）

▶️  启动：
   cd /Users/admin/tao/crawl4ai
   docker-compose -f docker-compose.dev.yml up

⏹️  停止：
   Ctrl+C（或另一个终端）
   docker-compose -f docker-compose.dev.yml down

📊 查看日志：
   docker-compose -f docker-compose.dev.yml logs -f

═══════════════════════════════════════════════════════════════

【热重载测试】

1. 启动服务后，修改：vim deploy/docker/server.py
2. 保存文件
3. 观察日志自动显示："Detected file change, reloading..."
4. 1-2 秒后重载完成

═══════════════════════════════════════════════════════════════

【生成的文件】

截图：ls -lh output/screenshots/
PDF： ls -lh output/pdfs/
日志：tail -f output/logs/*.log

═══════════════════════════════════════════════════════════════

【Cursor MCP 配置】

~/.cursor/mcp.json 应包含：
{
  "mcpServers": {
    "crawl4ai": {
      "url": "http://localhost:11235/mcp/sse"
    }
  }
}

重启 Cursor 后，可在对话中使用：
- "截图 https://www.azazie.com"
- "爬取这个网站"
- "转换成 markdown"

═══════════════════════════════════════════════════════════════

【时间对比】

操作          | 首次    | 第2次  | 第3次+
-------------|---------|--------|--------
构建时间     | 5-10分  | 0秒    | 0秒
启动时间     | 30秒    | 5秒    | 5秒
总计         | 6-11分  | 5秒    | 5秒

💡 关键：构建一次，永久使用！

═══════════════════════════════════════════════════════════════

【详细文档】

完整指南：cat BUILD_GUIDE.md
开发指南：cat QUICKSTART_DEV.md
快速启动：cat START_DEV.md

═══════════════════════════════════════════════════════════════

